/*
 * This file is generated by jOOQ.
 */
package com.apress.jooq.generated;


import com.apress.jooq.generated.tables.CompleteCarListing;
import com.apress.jooq.generated.tables.Vehicle;
import com.apress.jooq.generated.tables.VehicleArchive;
import com.apress.jooq.generated.tables.VehicleManufacturer;
import com.apress.jooq.generated.tables.VehicleModel;
import com.apress.jooq.generated.tables.VehiclePriceChange;
import com.apress.jooq.generated.tables.VehicleStyle;
import com.apress.jooq.generated.tables.VehicleTrim;
import com.apress.jooq.generated.tables.records.CompleteCarListingRecord;
import com.apress.jooq.generated.tables.records.VehicleArchiveRecord;
import com.apress.jooq.generated.tables.records.VehicleManufacturerRecord;
import com.apress.jooq.generated.tables.records.VehicleModelRecord;
import com.apress.jooq.generated.tables.records.VehiclePriceChangeRecord;
import com.apress.jooq.generated.tables.records.VehicleRecord;
import com.apress.jooq.generated.tables.records.VehicleStyleRecord;
import com.apress.jooq.generated.tables.records.VehicleTrimRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * edens_car.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CompleteCarListingRecord> SYNTHETIC_PK_COMPLETE_CAR_LISTING = Internal.createUniqueKey(CompleteCarListing.COMPLETE_CAR_LISTING, DSL.name("SYNTHETIC_PK_complete_car_listing"), new TableField[] { CompleteCarListing.COMPLETE_CAR_LISTING.VEHICLE_ID }, true);
    public static final UniqueKey<VehicleRecord> KEY_VEHICLE_PRIMARY = Internal.createUniqueKey(Vehicle.VEHICLE, DSL.name("KEY_vehicle_PRIMARY"), new TableField[] { Vehicle.VEHICLE.VEHICLE_ID }, true);
    public static final UniqueKey<VehicleArchiveRecord> KEY_VEHICLE_ARCHIVE_PRIMARY = Internal.createUniqueKey(VehicleArchive.VEHICLE_ARCHIVE, DSL.name("KEY_vehicle_archive_PRIMARY"), new TableField[] { VehicleArchive.VEHICLE_ARCHIVE.VEHICLE_ID }, true);
    public static final UniqueKey<VehicleManufacturerRecord> KEY_VEHICLE_MANUFACTURER_MANUFACTURER_NAME_UNIQUE = Internal.createUniqueKey(VehicleManufacturer.VEHICLE_MANUFACTURER, DSL.name("KEY_vehicle_manufacturer_manufacturer_name_UNIQUE"), new TableField[] { VehicleManufacturer.VEHICLE_MANUFACTURER.MANUFACTURER_NAME }, true);
    public static final UniqueKey<VehicleManufacturerRecord> KEY_VEHICLE_MANUFACTURER_PRIMARY = Internal.createUniqueKey(VehicleManufacturer.VEHICLE_MANUFACTURER, DSL.name("KEY_vehicle_manufacturer_PRIMARY"), new TableField[] { VehicleManufacturer.VEHICLE_MANUFACTURER.MANUFACTURER_ID }, true);
    public static final UniqueKey<VehicleModelRecord> KEY_VEHICLE_MODEL_PRIMARY = Internal.createUniqueKey(VehicleModel.VEHICLE_MODEL, DSL.name("KEY_vehicle_model_PRIMARY"), new TableField[] { VehicleModel.VEHICLE_MODEL.VEHICLE_MODEL_ID }, true);
    public static final UniqueKey<VehicleModelRecord> KEY_VEHICLE_MODEL_VEHICLE_MODEL_NAME_UNIQUE = Internal.createUniqueKey(VehicleModel.VEHICLE_MODEL, DSL.name("KEY_vehicle_model_vehicle_model_name_UNIQUE"), new TableField[] { VehicleModel.VEHICLE_MODEL.VEHICLE_MODEL_NAME }, true);
    public static final UniqueKey<VehiclePriceChangeRecord> KEY_VEHICLE_PRICE_CHANGE_PRIMARY = Internal.createUniqueKey(VehiclePriceChange.VEHICLE_PRICE_CHANGE, DSL.name("KEY_vehicle_price_change_PRIMARY"), new TableField[] { VehiclePriceChange.VEHICLE_PRICE_CHANGE.PRICE_CHANGE_ID }, true);
    public static final UniqueKey<VehicleStyleRecord> KEY_VEHICLE_STYLE_PRIMARY = Internal.createUniqueKey(VehicleStyle.VEHICLE_STYLE, DSL.name("KEY_vehicle_style_PRIMARY"), new TableField[] { VehicleStyle.VEHICLE_STYLE.VEHICLE_STYLE_ID }, true);
    public static final UniqueKey<VehicleTrimRecord> KEY_VEHICLE_TRIM_PRIMARY = Internal.createUniqueKey(VehicleTrim.VEHICLE_TRIM, DSL.name("KEY_vehicle_trim_PRIMARY"), new TableField[] { VehicleTrim.VEHICLE_TRIM.TRIM_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<VehicleRecord, VehicleManufacturerRecord> VEH_MANUFACTURER_ID = Internal.createForeignKey(Vehicle.VEHICLE, DSL.name("veh_manufacturer_id"), new TableField[] { Vehicle.VEHICLE.VEHICLE_MANUFACTURER }, Keys.KEY_VEHICLE_MANUFACTURER_PRIMARY, new TableField[] { VehicleManufacturer.VEHICLE_MANUFACTURER.MANUFACTURER_ID }, true);
    public static final ForeignKey<VehicleRecord, VehicleModelRecord> VEH_MODEL_ID = Internal.createForeignKey(Vehicle.VEHICLE, DSL.name("veh_model_id"), new TableField[] { Vehicle.VEHICLE.VEHICLE_MODEL_ID }, Keys.KEY_VEHICLE_MODEL_PRIMARY, new TableField[] { VehicleModel.VEHICLE_MODEL.VEHICLE_MODEL_ID }, true);
    public static final ForeignKey<VehicleRecord, VehicleStyleRecord> VEH_STYLE = Internal.createForeignKey(Vehicle.VEHICLE, DSL.name("veh_style"), new TableField[] { Vehicle.VEHICLE.VEHICLE_STYLE }, Keys.KEY_VEHICLE_STYLE_PRIMARY, new TableField[] { VehicleStyle.VEHICLE_STYLE.VEHICLE_STYLE_ID }, true);
    public static final ForeignKey<VehicleArchiveRecord, VehicleManufacturerRecord> VEH_ARCH_MANUFACTURER_ID = Internal.createForeignKey(VehicleArchive.VEHICLE_ARCHIVE, DSL.name("veh_arch_manufacturer_id"), new TableField[] { VehicleArchive.VEHICLE_ARCHIVE.VEHICLE_MANUFACTURER }, Keys.KEY_VEHICLE_MANUFACTURER_PRIMARY, new TableField[] { VehicleManufacturer.VEHICLE_MANUFACTURER.MANUFACTURER_ID }, true);
    public static final ForeignKey<VehicleArchiveRecord, VehicleModelRecord> VEH_ARCH_MODEL_ID = Internal.createForeignKey(VehicleArchive.VEHICLE_ARCHIVE, DSL.name("veh_arch_model_id"), new TableField[] { VehicleArchive.VEHICLE_ARCHIVE.VEHICLE_MODEL_ID }, Keys.KEY_VEHICLE_MODEL_PRIMARY, new TableField[] { VehicleModel.VEHICLE_MODEL.VEHICLE_MODEL_ID }, true);
    public static final ForeignKey<VehicleArchiveRecord, VehicleStyleRecord> VEH_ARCH_STYLE = Internal.createForeignKey(VehicleArchive.VEHICLE_ARCHIVE, DSL.name("veh_arch_style"), new TableField[] { VehicleArchive.VEHICLE_ARCHIVE.VEHICLE_STYLE }, Keys.KEY_VEHICLE_STYLE_PRIMARY, new TableField[] { VehicleStyle.VEHICLE_STYLE.VEHICLE_STYLE_ID }, true);
    public static final ForeignKey<VehicleModelRecord, VehicleManufacturerRecord> MANUFACTURER_ID = Internal.createForeignKey(VehicleModel.VEHICLE_MODEL, DSL.name("manufacturer_id"), new TableField[] { VehicleModel.VEHICLE_MODEL.VEHICLE_MAN_ID }, Keys.KEY_VEHICLE_MANUFACTURER_PRIMARY, new TableField[] { VehicleManufacturer.VEHICLE_MANUFACTURER.MANUFACTURER_ID }, true);
    public static final ForeignKey<VehicleModelRecord, VehicleStyleRecord> MODEL_STYLE_ID = Internal.createForeignKey(VehicleModel.VEHICLE_MODEL, DSL.name("model_style_id"), new TableField[] { VehicleModel.VEHICLE_MODEL.VEHICLE_STYLE_ID }, Keys.KEY_VEHICLE_STYLE_PRIMARY, new TableField[] { VehicleStyle.VEHICLE_STYLE.VEHICLE_STYLE_ID }, true);
    public static final ForeignKey<VehiclePriceChangeRecord, VehicleRecord> VEHICLE_ID_CHANGED = Internal.createForeignKey(VehiclePriceChange.VEHICLE_PRICE_CHANGE, DSL.name("vehicle_id_changed"), new TableField[] { VehiclePriceChange.VEHICLE_PRICE_CHANGE.VEHICLE_ID }, Keys.KEY_VEHICLE_PRIMARY, new TableField[] { Vehicle.VEHICLE.VEHICLE_ID }, true);
    public static final ForeignKey<VehicleTrimRecord, VehicleManufacturerRecord> TRIM_VEHICLE_MAN = Internal.createForeignKey(VehicleTrim.VEHICLE_TRIM, DSL.name("trim_vehicle_man"), new TableField[] { VehicleTrim.VEHICLE_TRIM.VEHICLE_MANUFACTURER_ID }, Keys.KEY_VEHICLE_MANUFACTURER_PRIMARY, new TableField[] { VehicleManufacturer.VEHICLE_MANUFACTURER.MANUFACTURER_ID }, true);
}
