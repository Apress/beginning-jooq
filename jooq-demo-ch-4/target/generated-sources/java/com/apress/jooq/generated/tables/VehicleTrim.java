/*
 * This file is generated by jOOQ.
 */
package com.apress.jooq.generated.tables;


import com.apress.jooq.generated.EdensCar;
import com.apress.jooq.generated.Indexes;
import com.apress.jooq.generated.Keys;
import com.apress.jooq.generated.tables.records.VehicleTrimRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleTrim extends TableImpl<VehicleTrimRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>edens_car.vehicle_trim</code>
     */
    public static final VehicleTrim VEHICLE_TRIM = new VehicleTrim();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehicleTrimRecord> getRecordType() {
        return VehicleTrimRecord.class;
    }

    /**
     * The column <code>edens_car.vehicle_trim.trim_id</code>.
     */
    public final TableField<VehicleTrimRecord, Long> TRIM_ID = createField(DSL.name("trim_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>edens_car.vehicle_trim.trim_name</code>.
     */
    public final TableField<VehicleTrimRecord, String> TRIM_NAME = createField(DSL.name("trim_name"), SQLDataType.VARCHAR(35).nullable(false), this, "");

    /**
     * The column <code>edens_car.vehicle_trim.vehicle_manufacturer_id</code>.
     */
    public final TableField<VehicleTrimRecord, Long> VEHICLE_MANUFACTURER_ID = createField(DSL.name("vehicle_manufacturer_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>edens_car.vehicle_trim.version</code>.
     */
    public final TableField<VehicleTrimRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT, this, "");

    private VehicleTrim(Name alias, Table<VehicleTrimRecord> aliased) {
        this(alias, aliased, null);
    }

    private VehicleTrim(Name alias, Table<VehicleTrimRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>edens_car.vehicle_trim</code> table reference
     */
    public VehicleTrim(String alias) {
        this(DSL.name(alias), VEHICLE_TRIM);
    }

    /**
     * Create an aliased <code>edens_car.vehicle_trim</code> table reference
     */
    public VehicleTrim(Name alias) {
        this(alias, VEHICLE_TRIM);
    }

    /**
     * Create a <code>edens_car.vehicle_trim</code> table reference
     */
    public VehicleTrim() {
        this(DSL.name("vehicle_trim"), null);
    }

    public <O extends Record> VehicleTrim(Table<O> child, ForeignKey<O, VehicleTrimRecord> key) {
        super(child, key, VEHICLE_TRIM);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : EdensCar.EDENS_CAR;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.VEHICLE_TRIM_TRIM_VEHICLE_MAN_IDX);
    }

    @Override
    public Identity<VehicleTrimRecord, Long> getIdentity() {
        return (Identity<VehicleTrimRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<VehicleTrimRecord> getPrimaryKey() {
        return Keys.KEY_VEHICLE_TRIM_PRIMARY;
    }

    @Override
    public List<ForeignKey<VehicleTrimRecord, ?>> getReferences() {
        return Arrays.asList(Keys.TRIM_VEHICLE_MAN);
    }

    private transient VehicleManufacturer _vehicleManufacturer;

    public VehicleManufacturer vehicleManufacturer() {
        if (_vehicleManufacturer == null)
            _vehicleManufacturer = new VehicleManufacturer(this, Keys.TRIM_VEHICLE_MAN);

        return _vehicleManufacturer;
    }

    @Override
    public VehicleTrim as(String alias) {
        return new VehicleTrim(DSL.name(alias), this);
    }

    @Override
    public VehicleTrim as(Name alias) {
        return new VehicleTrim(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleTrim rename(String name) {
        return new VehicleTrim(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleTrim rename(Name name) {
        return new VehicleTrim(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
