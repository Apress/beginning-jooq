/*
 * This file is generated by jOOQ.
 */
package com.apress.jooq.generated.tables.records;


import com.apress.jooq.generated.tables.VehiclePriceChange;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "vehicle_price_change",
    schema = "edens_car",
    indexes = {
        @Index(name = "vehicle_id_changed_idx", columnList = "vehicle_id ASC")
    }
)
public class VehiclePriceChangeRecord extends UpdatableRecordImpl<VehiclePriceChangeRecord> implements Record6<Long, Long, BigDecimal, BigDecimal, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>edens_car.vehicle_price_change.price_change_id</code>.
     */
    public void setPriceChangeId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>edens_car.vehicle_price_change.price_change_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "price_change_id", nullable = false, precision = 19)
    public Long getPriceChangeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>edens_car.vehicle_price_change.vehicle_id</code>.
     */
    public void setVehicleId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>edens_car.vehicle_price_change.vehicle_id</code>.
     */
    @Column(name = "vehicle_id", nullable = false, precision = 19)
    public Long getVehicleId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>edens_car.vehicle_price_change.current_price</code>.
     */
    public void setCurrentPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>edens_car.vehicle_price_change.current_price</code>.
     */
    @Column(name = "current_price", nullable = false, precision = 10, scale = 4)
    public BigDecimal getCurrentPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>edens_car.vehicle_price_change.revised_price</code>.
     */
    public void setRevisedPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>edens_car.vehicle_price_change.revised_price</code>.
     */
    @Column(name = "revised_price", nullable = false, precision = 10, scale = 4)
    public BigDecimal getRevisedPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>edens_car.vehicle_price_change.last_changed</code>.
     */
    public void setLastChanged(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>edens_car.vehicle_price_change.last_changed</code>.
     */
    @Column(name = "last_changed")
    public LocalDateTime getLastChanged() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>edens_car.vehicle_price_change.version</code>.
     */
    public void setVersion(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>edens_car.vehicle_price_change.version</code>.
     */
    @Column(name = "version", precision = 19)
    public Long getVersion() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, BigDecimal, BigDecimal, LocalDateTime, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, BigDecimal, BigDecimal, LocalDateTime, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return VehiclePriceChange.VEHICLE_PRICE_CHANGE.PRICE_CHANGE_ID;
    }

    @Override
    public Field<Long> field2() {
        return VehiclePriceChange.VEHICLE_PRICE_CHANGE.VEHICLE_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return VehiclePriceChange.VEHICLE_PRICE_CHANGE.CURRENT_PRICE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return VehiclePriceChange.VEHICLE_PRICE_CHANGE.REVISED_PRICE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return VehiclePriceChange.VEHICLE_PRICE_CHANGE.LAST_CHANGED;
    }

    @Override
    public Field<Long> field6() {
        return VehiclePriceChange.VEHICLE_PRICE_CHANGE.VERSION;
    }

    @Override
    public Long component1() {
        return getPriceChangeId();
    }

    @Override
    public Long component2() {
        return getVehicleId();
    }

    @Override
    public BigDecimal component3() {
        return getCurrentPrice();
    }

    @Override
    public BigDecimal component4() {
        return getRevisedPrice();
    }

    @Override
    public LocalDateTime component5() {
        return getLastChanged();
    }

    @Override
    public Long component6() {
        return getVersion();
    }

    @Override
    public Long value1() {
        return getPriceChangeId();
    }

    @Override
    public Long value2() {
        return getVehicleId();
    }

    @Override
    public BigDecimal value3() {
        return getCurrentPrice();
    }

    @Override
    public BigDecimal value4() {
        return getRevisedPrice();
    }

    @Override
    public LocalDateTime value5() {
        return getLastChanged();
    }

    @Override
    public Long value6() {
        return getVersion();
    }

    @Override
    public VehiclePriceChangeRecord value1(Long value) {
        setPriceChangeId(value);
        return this;
    }

    @Override
    public VehiclePriceChangeRecord value2(Long value) {
        setVehicleId(value);
        return this;
    }

    @Override
    public VehiclePriceChangeRecord value3(BigDecimal value) {
        setCurrentPrice(value);
        return this;
    }

    @Override
    public VehiclePriceChangeRecord value4(BigDecimal value) {
        setRevisedPrice(value);
        return this;
    }

    @Override
    public VehiclePriceChangeRecord value5(LocalDateTime value) {
        setLastChanged(value);
        return this;
    }

    @Override
    public VehiclePriceChangeRecord value6(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public VehiclePriceChangeRecord values(Long value1, Long value2, BigDecimal value3, BigDecimal value4, LocalDateTime value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VehiclePriceChangeRecord
     */
    public VehiclePriceChangeRecord() {
        super(VehiclePriceChange.VEHICLE_PRICE_CHANGE);
    }

    /**
     * Create a detached, initialised VehiclePriceChangeRecord
     */
    public VehiclePriceChangeRecord(Long priceChangeId, Long vehicleId, BigDecimal currentPrice, BigDecimal revisedPrice, LocalDateTime lastChanged, Long version) {
        super(VehiclePriceChange.VEHICLE_PRICE_CHANGE);

        setPriceChangeId(priceChangeId);
        setVehicleId(vehicleId);
        setCurrentPrice(currentPrice);
        setRevisedPrice(revisedPrice);
        setLastChanged(lastChanged);
        setVersion(version);
    }

    /**
     * Create a detached, initialised VehiclePriceChangeRecord
     */
    public VehiclePriceChangeRecord(com.apress.jooq.generated.tables.pojos.VehiclePriceChange value) {
        super(VehiclePriceChange.VEHICLE_PRICE_CHANGE);

        if (value != null) {
            setPriceChangeId(value.getPriceChangeId());
            setVehicleId(value.getVehicleId());
            setCurrentPrice(value.getCurrentPrice());
            setRevisedPrice(value.getRevisedPrice());
            setLastChanged(value.getLastChanged());
            setVersion(value.getVersion());
        }
    }
}
