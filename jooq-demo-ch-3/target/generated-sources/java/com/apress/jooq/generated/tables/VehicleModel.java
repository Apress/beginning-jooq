/*
 * This file is generated by jOOQ.
 */
package com.apress.jooq.generated.tables;


import com.apress.jooq.generated.EdensCar;
import com.apress.jooq.generated.Indexes;
import com.apress.jooq.generated.Keys;
import com.apress.jooq.generated.tables.records.VehicleModelRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleModel extends TableImpl<VehicleModelRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>edens_car.vehicle_model</code>
     */
    public static final VehicleModel VEHICLE_MODEL = new VehicleModel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehicleModelRecord> getRecordType() {
        return VehicleModelRecord.class;
    }

    /**
     * The column <code>edens_car.vehicle_model.vehicle_model_id</code>.
     */
    public final TableField<VehicleModelRecord, Long> VEHICLE_MODEL_ID = createField(DSL.name("vehicle_model_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>edens_car.vehicle_model.vehicle_model_name</code>.
     */
    public final TableField<VehicleModelRecord, String> VEHICLE_MODEL_NAME = createField(DSL.name("vehicle_model_name"), SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>edens_car.vehicle_model.vehicle_style_id</code>.
     */
    public final TableField<VehicleModelRecord, Long> VEHICLE_STYLE_ID = createField(DSL.name("vehicle_style_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>edens_car.vehicle_model.vehicle_man_id</code>.
     */
    public final TableField<VehicleModelRecord, Long> VEHICLE_MAN_ID = createField(DSL.name("vehicle_man_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>edens_car.vehicle_model.version</code>.
     */
    public final TableField<VehicleModelRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT, this, "");

    private VehicleModel(Name alias, Table<VehicleModelRecord> aliased) {
        this(alias, aliased, null);
    }

    private VehicleModel(Name alias, Table<VehicleModelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>edens_car.vehicle_model</code> table reference
     */
    public VehicleModel(String alias) {
        this(DSL.name(alias), VEHICLE_MODEL);
    }

    /**
     * Create an aliased <code>edens_car.vehicle_model</code> table reference
     */
    public VehicleModel(Name alias) {
        this(alias, VEHICLE_MODEL);
    }

    /**
     * Create a <code>edens_car.vehicle_model</code> table reference
     */
    public VehicleModel() {
        this(DSL.name("vehicle_model"), null);
    }

    public <O extends Record> VehicleModel(Table<O> child, ForeignKey<O, VehicleModelRecord> key) {
        super(child, key, VEHICLE_MODEL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : EdensCar.EDENS_CAR;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.VEHICLE_MODEL_MANUFACTURER_ID_IDX, Indexes.VEHICLE_MODEL_MODEL_STYLE_ID_IDX);
    }

    @Override
    public Identity<VehicleModelRecord, Long> getIdentity() {
        return (Identity<VehicleModelRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<VehicleModelRecord> getPrimaryKey() {
        return Keys.KEY_VEHICLE_MODEL_PRIMARY;
    }

    @Override
    public List<UniqueKey<VehicleModelRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_VEHICLE_MODEL_VEHICLE_MODEL_NAME_UNIQUE);
    }

    @Override
    public List<ForeignKey<VehicleModelRecord, ?>> getReferences() {
        return Arrays.asList(Keys.MODEL_STYLE_ID, Keys.MANUFACTURER_ID);
    }

    private transient VehicleStyle _vehicleStyle;
    private transient VehicleManufacturer _vehicleManufacturer;

    public VehicleStyle vehicleStyle() {
        if (_vehicleStyle == null)
            _vehicleStyle = new VehicleStyle(this, Keys.MODEL_STYLE_ID);

        return _vehicleStyle;
    }

    public VehicleManufacturer vehicleManufacturer() {
        if (_vehicleManufacturer == null)
            _vehicleManufacturer = new VehicleManufacturer(this, Keys.MANUFACTURER_ID);

        return _vehicleManufacturer;
    }

    @Override
    public VehicleModel as(String alias) {
        return new VehicleModel(DSL.name(alias), this);
    }

    @Override
    public VehicleModel as(Name alias) {
        return new VehicleModel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleModel rename(String name) {
        return new VehicleModel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VehicleModel rename(Name name) {
        return new VehicleModel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
